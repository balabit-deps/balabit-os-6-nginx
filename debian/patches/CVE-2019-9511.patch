From 94c5eb142e58a86f81eb1369fa6fcb96c2f23d6b Mon Sep 17 00:00:00 2001
From: Ruslan Ermilov <ru@nginx.com>
Date: Tue, 13 Aug 2019 15:43:36 +0300
Subject: [PATCH] HTTP/2: limited number of DATA frames.

Fixed excessive memory growth and CPU usage if stream windows are
manipulated in a way that results in generating many small DATA frames.
Fix is to limit the number of simultaneously allocated DATA frames.
---
 src/http/v2/ngx_http_v2.c               |  2 ++
 src/http/v2/ngx_http_v2.h               |  2 ++
 src/http/v2/ngx_http_v2_filter_module.c | 22 +++++++++++++++++-----
 3 files changed, 21 insertions(+), 5 deletions(-)

Index: nginx-1.10.3/src/http/v2/ngx_http_v2.c
===================================================================
--- nginx-1.10.3.orig/src/http/v2/ngx_http_v2.c	2019-08-14 14:45:03.291452525 -0400
+++ nginx-1.10.3/src/http/v2/ngx_http_v2.c	2019-08-14 14:45:03.291452525 -0400
@@ -4059,6 +4059,8 @@ ngx_http_v2_close_stream(ngx_http_v2_str
      */
     pool = stream->pool;
 
+    h2c->frames -= stream->frames;
+
     ngx_http_free_request(stream->request, rc);
 
     if (pool != h2c->state.pool) {
Index: nginx-1.10.3/src/http/v2/ngx_http_v2.h
===================================================================
--- nginx-1.10.3.orig/src/http/v2/ngx_http_v2.h	2019-08-14 14:45:03.291452525 -0400
+++ nginx-1.10.3/src/http/v2/ngx_http_v2.h	2019-08-14 14:45:03.291452525 -0400
@@ -181,6 +181,8 @@ struct ngx_http_v2_stream_s {
 
     ngx_buf_t                       *preread;
 
+    ngx_uint_t                       frames;
+
     ngx_http_v2_out_frame_t         *free_frames;
     ngx_chain_t                     *free_frame_headers;
     ngx_chain_t                     *free_bufs;
Index: nginx-1.10.3/src/http/v2/ngx_http_v2_filter_module.c
===================================================================
--- nginx-1.10.3.orig/src/http/v2/ngx_http_v2_filter_module.c	2019-08-14 14:45:03.291452525 -0400
+++ nginx-1.10.3/src/http/v2/ngx_http_v2_filter_module.c	2019-08-14 14:46:21.896085930 -0400
@@ -999,23 +999,35 @@ static ngx_http_v2_out_frame_t *
 ngx_http_v2_filter_get_data_frame(ngx_http_v2_stream_t *stream,
     size_t len, ngx_chain_t *first, ngx_chain_t *last)
 {
-    u_char                      flags;
-    ngx_buf_t                  *buf;
-    ngx_chain_t                *cl;
-    ngx_http_v2_out_frame_t  *frame;
+    u_char                     flags;
+    ngx_buf_t                 *buf;
+    ngx_chain_t               *cl;
+    ngx_http_v2_out_frame_t   *frame;
+    ngx_http_v2_connection_t  *h2c;
 
 
     frame = stream->free_frames;
+    h2c = stream->connection;
 
     if (frame) {
         stream->free_frames = frame->next;
 
-    } else {
+    } else if (h2c->frames < 10000) {
         frame = ngx_palloc(stream->request->pool,
                            sizeof(ngx_http_v2_out_frame_t));
         if (frame == NULL) {
             return NULL;
         }
+
+        stream->frames++;
+        h2c->frames++;
+
+    } else {
+        ngx_log_error(NGX_LOG_INFO, h2c->connection->log, 0,
+                      "http2 flood detected");
+
+        h2c->connection->error = 1;
+        return NULL;
     }
 
     flags = last->buf->last_buf ? NGX_HTTP_V2_END_STREAM_FLAG : 0;
